#include <behaviors.dtsi>

#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/bt.h>

// ZMK nodefree config
#include "../zmk-nodefree-config/helper.h"
#include "../zmk-nodefree-config/international_chars/slovak.dtsi"   // Slovak special chars
#include "../macros/cz_sk_language_support.dtsi"

#define DIAC_TAP_DANCE_MS 100;


/ {
    macros {

        a_long_uc: a_long_uc {
            label = "a_long_uc";
            compatible = "zmk,behavior-macro";
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_release>,
                <&kp LSHIFT>,
                <&macro_tap>,
                <&kp EQUAL>,
                <&macro_press>,
                <&kp LSHIFT>,
                <&macro_tap>,
                <&kp A>,
                <&macro_release>,
                <&kp LSHIFT>;
            #binding-cells = <0>;
        };

        a_dot_uc: a_dot_uc {
            label = "a_dot_uc";
            compatible = "zmk,behavior-macro";
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp RALT>,
                <&macro_tap>,
                <&kp KP_N0>,
                <&macro_tap>,
                <&kp KP_N1>,
                <&macro_tap>,
                <&kp KP_N9>,
                <&macro_tap>,
                <&kp KP_N6>,
                <&macro_release>,
                <&kp RALT>;
            #binding-cells = <0>;
        };
    };

    behaviors {
        tda_lc: tap_dance_a_lc {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_A_LC";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings =
                <&kp A>,
                <&kp N8>,
                <&kp RIGHT_BRACKET>;
        };

        tda_uc: tap_dance_a_uc {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_A_UC";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings =
                <&kp A>,
                <&a_long_uc>,
                <&a_dot_uc>;
        };

        mod_a: mod_morph_a {
            compatible = "zmk,behavior-mod-morph";
            label = "A MORPH";
            #binding-cells = <0>;
            bindings = <&tda_lc>, <&tda_uc>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |   BKSP    |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |    '      |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | SHFT(RET) |
            //                         | ALT | LWR | SPC | RSE  | ALT |

            bindings = <
   &kp TAB   &sk_al   &kp W     &kp E   &kp R   &kp T              &kp Y   &kp U      &kp I    &kp O     &kp P       &kp BSPC
 &kp LCTRL   &mod_a   &kp S     &e_long_uc   &kp F   &kp G              &kp H   &kp J      &kp K    &kp L  &kp SEMI        &kp SQT
 &kp LSHFT   &kp Z   &kp X     &kp C   &kp V   &kp B              &kp N   &kp M  &kp COMMA  &kp DOT  &kp FSLH  &mt RSHFT RET
                            &kp LALT   &mo 1          &kp SPACE           &mo 2   &kp RALT
            >;
        };

        lower_layer {
            // ----------------------------------------------------------------------------------
            // |    |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |    DEL    |
            // |    |  _  |  +  |  {  |  }  | "|" |   | LFT | DWN |  UP | RGT |  `  |     ~     |
            // |    | ESC | GUI | ALT | CAPS|  "  |   | HOME| END | PGUP| PGDN| PRSC| SHFT(RET) |
            //                       |     |     | RET | ADJ |     |

            bindings = <
 &trans   &kp EXCL       &kp AT  &kp HASH  &kp DLLR  &kp PRCNT           &kp CARET  &kp AMPS     &kp N8   &kp LPAR   &kp RPAR        &kp DEL
 &trans  &kp MINUS  &kp KP_PLUS  &kp LBRC  &kp RBRC   &kp PIPE            &kp LEFT  &kp DOWN     &kp UP  &kp RIGHT  &kp GRAVE      &kp TILDE
 &trans    &kp ESC     &kp LGUI  &kp LALT  &kp CLCK    &kp DQT            &kp HOME   &kp END  &kp PG_UP  &kp PG_DN  &kp PSCRN  &mt RSHFT RET
                                   &trans    &trans             &kp RET                &mo 3     &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |    |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | DEL |
            // |    |  -  |  =  |  [  |  ]  |  \  |   | F1  | F2  | F3  | F4  | F5  | F6  |
            // |    | ESC | GUI | ALT | CAPS|  "  |   | F7  | F8  | F9  | F10 | F11 | F12 |
            //                       |     | ADJ | BKSP |    |     |

            bindings = <
 &trans     &kp N1     &kp N2    &kp N3    &kp N4    &kp N5            &kp N6  &kp N7  &kp N8   &kp N9   &kp N0  &kp DEL
 &trans  &kp MINUS  &kp EQUAL  &kp LBKT  &kp RBKT  &kp BSLH            &kp F1  &kp F2  &kp F3   &kp F4   &kp F5   &kp F6
 &trans    &kp ESC   &kp LGUI  &kp RALT  &kp CLCK   &kp DQT            &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
                                 &trans     &mo 3            &kp BSPC          &trans  &trans
            >;
        };

        adjust_layer {
            // -----------------------------------------------------------------------------------------
            // | RGB BRI+ | RGB SAT+ | RGB HUE+ | RGB ANI+ |    | RGB TOG |   |  BT1  | BT2 | BT3 | BT4 | BT5 | BT CLR |
            // | RGB BRI- | RGB SAT- | RGB HUE- | RGB ANI- |    |         |   |       |     |     |     |     |        |
            // |          |          |          |          |    |         |   | RESET |     |     |     |     |        |
            //                                              |     |     |     |     |     |

            bindings = <
 &rgb_ug RGB_BRI  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_EFF   &none  &rgb_ug RGB_TOG          &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR
 &rgb_ug RGB_BRD  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_EFR   &none            &none                 &none         &none         &none         &none         &none       &none
           &none            &none            &none            &none   &none            &none                &bootloader         &none         &none         &none         &none       &none
                                                             &trans  &trans                   &tog 3                      &trans        &trans
            >;
        };
    };
};
